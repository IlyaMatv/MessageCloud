{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Monday/NameCmp/NameCmp.module.css","components/Monday/MessageCloud/MessageText/MessageText.module.css","components/Monday/Monday.module.css","components/Monday/MessageCloud/MessageCloud.module.css","components/Monday/MessageCloud/Name/Name.module.css","components/Monday/Login/Login.module.css","components/Monday/Login/LoginAddItem/LoginAddItem.module.css","components/Monday/Login/LoginUsers/LoginUsers.module.css","components/Navbar/Navbar.jsx","components/Monday/NameCmp/NameCmp.jsx","components/Monday/MessageCloud/Name/Name.jsx","components/Monday/MessageCloud/MessageText/MessageText.jsx","components/Monday/MessageCloud/MessageCloud.jsx","components/Monday/Login/LoginAddItem/LoginAddItem.jsx","components/Monday/Login/LoginCount/LoginCount.jsx","components/Monday/Login/LoginUsers/LoginUsers.jsx","components/Monday/Login/Login.jsx","components/Monday/Monday.jsx","components/Tuesday/Tuesday.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Navbar","props","className","classes","dropdown","dropbtn","navbar","to","activeClassName","active","NameCmp","qualities","map","el","index","key","gold","nameItem","name","Name","MessageText","text","time","MessageCloud","message","LoginAddItem","state","title","error","onTitleChanged","e","setState","currentTarget","value","onAddName","newName","usersName","users","alert","addUser","onKeyPress","render","classError","onChange","type","placeholder","onClick","React","Component","LoginCount","count","LoginUsers","user","Login","newUsers","login","Monday","wrap","Tuesday","App","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4a79ce90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Navbar_dropdown__1rC1_\",\"dropbtn\":\"Navbar_dropbtn__170cd\",\"navbar\":\"Navbar_navbar__1hejU\",\"active\":\"Navbar_active__2rhy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"NameCmp_name__3eazm\",\"gold\":\"NameCmp_gold__orPZM\",\"nameItem\":\"NameCmp_nameItem__3H5-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"MessageText_text__1dURR\",\"time\":\"MessageText_time__3pCMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Monday_wrap__3awTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageCloud_message__13Fso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__28ddV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1nzls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"LoginAddItem_error__XB666\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"LoginUsers_users__2TyMp\"};","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dropdown}>\r\n          <button className={classes.dropbtn}>choose day</button>\r\n          <nav className={classes.navbar}>\r\n            <NavLink to=\"/Monday\" activeClassName={classes.active}>Monday</NavLink>\r\n            <NavLink to=\"/Tuesday\" activeClassName={classes.active}>Tuesday</NavLink>\r\n          </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport classes from './NameCmp.module.css'\r\n\r\n\r\n\r\nconst NameCmp = (props) => {\r\n\r\n    const allQualities = ['буддист', 'контрабандист', 'тракторист']\r\n    const qualities = allQualities.map((el, index) => {\r\n        return (<div key={index} className={index === 1 ? classes.gold : classes.nameItem}>{el}</div>)\r\n    }) \r\n    \r\n\r\n\r\n    return (\r\n        <div className={classes.name}>\r\n            <div>Матвейчук Илья</div>\r\n            {qualities}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameCmp","import React from 'react'\r\nimport classes from './Name.module.css'\r\n\r\nconst Name = (props) => {\r\n\r\n    return (\r\n        <div className={classes.name}>\r\n            Илья Матвейчук\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Name","import React from 'react'\r\nimport classes from './MessageText.module.css'\r\n\r\nconst MessageText = (props) => {\r\n\r\n    return (\r\n        <div className={classes.text}>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum quia nam incidunt.\r\n            <div className={classes.time}>21:00</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageText","import React from 'react'\r\nimport classes from './MessageCloud.module.css'\r\nimport Name from './Name/Name'\r\nimport MessageText from './MessageText/MessageText'\r\n\r\nconst MessageCloud = (props) => {\r\n\r\n    return (\r\n        <div className={classes.message}>\r\n            <Name />\r\n            <MessageText />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageCloud","import React from 'react'\r\nimport classes from './LoginAddItem.module.css'\r\n\r\nclass LoginAddItem extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        error: false\r\n    }\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({\r\n            title: e.currentTarget.value,\r\n            error: false\r\n        })\r\n    }\r\n\r\n    onAddName = () => {\r\n        let newName = this.state.title\r\n        this.setState({ title: '' })\r\n        let usersName = [...this.props.users, newName]\r\n        if (newName === '') {\r\n            this.setState({ error: true })\r\n            alert('enter your name')\r\n        } else {\r\n            this.setState(() => {\r\n                return {\r\n                    error: false\r\n                }\r\n            }, this.props.addUser(usersName))\r\n            alert(`Welcome ${newName}`)\r\n        }\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.onAddName()\r\n        }\r\n    }\r\n\r\n\r\n    render = () => {\r\n\r\n        let classError = this.state.error === true ? classes.error : ''\r\n\r\n        return (\r\n            <>\r\n                <input className={classError}\r\n                    value={this.state.title}\r\n                    onKeyPress={this.onKeyPress}\r\n                    onChange={this.onTitleChanged}\r\n                    type=\"text\" placeholder=\"your name\" />\r\n                <button onClick={this.onAddName}>click!</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LoginAddItem","import React from 'react'\r\n\r\nconst LoginCount = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>{props.count}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginCount","import React from 'react'\r\nimport classes from './LoginUsers.module.css'\r\n\r\nconst LoginUsers = (props) => {\r\n\r\n    let users = props.users.map(user => {\r\n        return `${user}; `\r\n    })\r\n\r\n    return (\r\n        <div className={classes.users}>\r\n            {users}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginUsers","import React from 'react'\r\nimport classes from './Login.module.css'\r\nimport LoginAddItem from './LoginAddItem/LoginAddItem'\r\nimport LoginCount from './LoginCount/LoginCount'\r\nimport LoginUsers from './LoginUsers/LoginUsers'\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        count: 0,\r\n        users: []\r\n    }\r\n\r\n    addUser = (newUsers) => {\r\n        this.setState({ count: this.state.count + 1, users: newUsers })\r\n    }\r\n\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={classes.login}>\r\n                <LoginCount count={this.state.count} />\r\n\r\n                <LoginAddItem\r\n                    addUser={this.addUser}\r\n                    count={this.state.count}\r\n                    users={this.state.users}\r\n                />\r\n\r\n                <LoginUsers users={this.state.users} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport classes from './Monday.module.css'\r\nimport NameCmp from './NameCmp/NameCmp'\r\nimport MessageCloud from './MessageCloud/MessageCloud'\r\nimport Login from './Login/Login'\r\n\r\nconst Monday = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n\r\n            <NameCmp />\r\n            <MessageCloud />\r\n            <Login />\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Monday","import React from 'react'\r\n\r\nconst Tuesday = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tuesday</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuesday","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route } from 'react-router-dom';\nimport Monday from './components/Monday/Monday'\nimport Tuesday from './components/Tuesday/Tuesday';\n\n\n\nfunction App() {\n  return (\n    <div className=\"wrap\">\n\n\n      <div className=\"navbar_wrap\">\n        <Navbar />\n      </div>\n\n      <div className=\"content_wrap\">\n        <Route path='/Monday' render={() => <Monday />} />\n        <Route path='/Tuesday' render={() => <Tuesday />} />\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}